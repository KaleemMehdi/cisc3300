1. In an interpreted language, the source code is not directly translated by the target machine. Instead, the source code is read and executed by a different program called the interpreter. In a compiled language, the target machine directly translates the source code and executes it.  
2. In dynamically typed languages, type checking is performed at runtime (which means that the type of a variable is allowed to change over its lifetime). In statically typed languages, a variable is stuck with its type and type checking is performed at compile time. In a strongly typed language, the compiler is strict when it comes to the types of variables. In a weakly typed language, data types are not used too strictly, and types can be converted when it is found to be reasonable. 
3. Var is global and function scoped, and redeclarable. Let is block scoped and redeclarable. Const is block scoped, but not redeclarable. 
4. An anonymous function is a function without a name. Higher-order functions are functions that return a function or take other functions as arguments. Callback functions are functions that are passed as an argument to another function to be called later. First-class functions are functions that are treated like other variables. 
5. In JavaScript, an object is a data structure consisting of key value pairs. It is a collection of properties where each property is an association between a key and a value. 
